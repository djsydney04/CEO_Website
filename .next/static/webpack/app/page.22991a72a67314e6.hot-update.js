"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/code-cube.tsx":
/*!**************************************!*\
  !*** ./src/components/code-cube.tsx ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CodeCube)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three */ \"(app-pages-browser)/./node_modules/three/build/three.cjs\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n// Create a dense binary pattern\nfunction generateBinaryPattern(width, height) {\n    const pattern = [];\n    for(let i = 0; i < height; i++){\n        let row = '';\n        for(let j = 0; j < width; j++){\n            row += Math.random() > 0.5 ? '1' : '0';\n        }\n        pattern.push(row);\n    }\n    return pattern;\n}\n// Generate code-like patterns\nfunction generateCodePattern() {\n    const patterns = [\n        Array(4).fill(0).map(()=>' '.repeat(Math.floor(Math.random() * 8)) + 'function(' + 'x'.repeat(Math.floor(Math.random() * 3)) + ') {'),\n        Array(4).fill(0).map(()=>' '.repeat(Math.floor(Math.random() * 12)) + 'const ' + 'x'.repeat(Math.floor(Math.random() * 5)) + ' = ' + Math.floor(Math.random() * 100) + ';'),\n        Array(4).fill(0).map(()=>' '.repeat(Math.floor(Math.random() * 12)) + 'return ' + 'x'.repeat(Math.floor(Math.random() * 4)) + ';'),\n        Array(4).fill(0).map(()=>' '.repeat(Math.floor(Math.random() * 8)) + '}'),\n        Array(4).fill(0).map(()=>' '.repeat(Math.floor(Math.random() * 12)) + 'if (' + 'x'.repeat(Math.floor(Math.random() * 3)) + ' > ' + Math.floor(Math.random() * 10) + ') {')\n    ];\n    return patterns.flat();\n}\nfunction CodeCube() {\n    _s();\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CodeCube.useEffect\": ()=>{\n            if (!containerRef.current) return;\n            // Scene setup\n            const scene = new three__WEBPACK_IMPORTED_MODULE_2__.Scene();\n            scene.background = new three__WEBPACK_IMPORTED_MODULE_2__.Color('#ffffff');\n            const camera = new three__WEBPACK_IMPORTED_MODULE_2__.PerspectiveCamera(45, 1, 0.1, 1000);\n            camera.position.set(5, 5, 5);\n            camera.lookAt(0, 0, 0);\n            const renderer = new three__WEBPACK_IMPORTED_MODULE_2__.WebGLRenderer({\n                antialias: true,\n                alpha: true,\n                preserveDrawingBuffer: true\n            });\n            renderer.setPixelRatio(window.devicePixelRatio);\n            // Create binary textures with transparent background and gray text\n            const materials = Array(6).fill(null).map({\n                \"CodeCube.useEffect.materials\": ()=>{\n                    const canvas = document.createElement('canvas');\n                    canvas.width = 2048;\n                    canvas.height = 2048;\n                    const ctx = canvas.getContext('2d');\n                    // Make background fully transparent\n                    ctx.clearRect(0, 0, canvas.width, canvas.height);\n                    // Generate binary pattern - 32x32 grid for larger, more visible digits\n                    const pattern = generateBinaryPattern(32, 32);\n                    const cellSize = canvas.width / 32;\n                    // Larger font size and bold for better visibility\n                    ctx.font = \"bold \".concat(Math.floor(cellSize * 0.7), 'px \"Courier New\", monospace');\n                    ctx.textAlign = 'center';\n                    ctx.textBaseline = 'middle';\n                    pattern.forEach({\n                        \"CodeCube.useEffect.materials\": (row, i)=>{\n                            for(let j = 0; j < row.length; j++){\n                                const x = j * cellSize + cellSize / 2;\n                                const y = i * cellSize + cellSize / 2;\n                                // Draw with the site's gray color\n                                ctx.fillStyle = '#545454';\n                                ctx.fillText(row[j], x, y);\n                            }\n                        }\n                    }[\"CodeCube.useEffect.materials\"]);\n                    const texture = new three__WEBPACK_IMPORTED_MODULE_2__.CanvasTexture(canvas);\n                    texture.anisotropy = renderer.capabilities.getMaxAnisotropy();\n                    texture.needsUpdate = true;\n                    return new three__WEBPACK_IMPORTED_MODULE_2__.MeshBasicMaterial({\n                        map: texture,\n                        transparent: true,\n                        opacity: 0.9,\n                        side: three__WEBPACK_IMPORTED_MODULE_2__.DoubleSide\n                    });\n                }\n            }[\"CodeCube.useEffect.materials\"]);\n            // Main cube\n            const geometry = new three__WEBPACK_IMPORTED_MODULE_2__.BoxGeometry(3, 3, 3);\n            const cube = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(geometry, materials);\n            scene.add(cube);\n            // Create particles\n            const particleCount = 150;\n            const particleGeometry = new three__WEBPACK_IMPORTED_MODULE_2__.BufferGeometry();\n            const particlePositions = new Float32Array(particleCount * 3);\n            const particleVelocities = new Float32Array(particleCount * 3);\n            const particleLifetimes = new Float32Array(particleCount);\n            // Initialize particles\n            for(let i = 0; i < particleCount; i++){\n                resetParticle(i);\n            }\n            function resetParticle(index) {\n                // Random position on cube surface\n                const angle = Math.random() * Math.PI * 2;\n                const u = Math.random() * 2 - 1;\n                const radius = 1.5 // Half cube size\n                ;\n                particlePositions[index * 3] = Math.cos(angle) * Math.sqrt(1 - u * u) * radius;\n                particlePositions[index * 3 + 1] = Math.sin(angle) * Math.sqrt(1 - u * u) * radius;\n                particlePositions[index * 3 + 2] = u * radius;\n                // Velocity away from cube\n                const speed = 0.01 + Math.random() * 0.02;\n                particleVelocities[index * 3] = particlePositions[index * 3] * speed;\n                particleVelocities[index * 3 + 1] = particlePositions[index * 3 + 1] * speed;\n                particleVelocities[index * 3 + 2] = particlePositions[index * 3 + 2] * speed;\n                // Random lifetime\n                particleLifetimes[index] = Math.random();\n            }\n            particleGeometry.setAttribute('position', new three__WEBPACK_IMPORTED_MODULE_2__.BufferAttribute(particlePositions, 3));\n            const particleMaterial = new three__WEBPACK_IMPORTED_MODULE_2__.PointsMaterial({\n                color: 0x545454,\n                size: 0.03,\n                transparent: true,\n                opacity: 0.4,\n                blending: three__WEBPACK_IMPORTED_MODULE_2__.AdditiveBlending\n            });\n            const particles = new three__WEBPACK_IMPORTED_MODULE_2__.Points(particleGeometry, particleMaterial);\n            scene.add(particles);\n            // Lights - simple lighting for transparent cube\n            const ambientLight = new three__WEBPACK_IMPORTED_MODULE_2__.AmbientLight(0xffffff, 0.8);\n            scene.add(ambientLight);\n            const pointLight1 = new three__WEBPACK_IMPORTED_MODULE_2__.PointLight(0xffffff, 0.6);\n            pointLight1.position.set(10, 10, 10);\n            scene.add(pointLight1);\n            const pointLight2 = new three__WEBPACK_IMPORTED_MODULE_2__.PointLight(0xffffff, 0.4);\n            pointLight2.position.set(-10, -10, -10);\n            scene.add(pointLight2);\n            // Additional light to ensure all sides are visible\n            const pointLight3 = new three__WEBPACK_IMPORTED_MODULE_2__.PointLight(0xffffff, 0.5);\n            pointLight3.position.set(0, 10, -10);\n            scene.add(pointLight3);\n            // Initial setup\n            const container = containerRef.current;\n            const { width } = container.getBoundingClientRect();\n            const height = width // Make it square\n            ;\n            renderer.setSize(width, height);\n            container.appendChild(renderer.domElement);\n            // Animation\n            let time = 0;\n            let animationFrameId;\n            function animate() {\n                time += 0.01;\n                cube.rotation.x += 0.002;\n                cube.rotation.y += 0.002;\n                // Update particles\n                const positions = particleGeometry.attributes.position.array;\n                for(let i = 0; i < particleCount; i++){\n                    particleLifetimes[i] += 0.01;\n                    if (particleLifetimes[i] > 1) {\n                        resetParticle(i);\n                    } else {\n                        positions[i * 3] += particleVelocities[i * 3];\n                        positions[i * 3 + 1] += particleVelocities[i * 3 + 1];\n                        positions[i * 3 + 2] += particleVelocities[i * 3 + 2];\n                    }\n                }\n                particleGeometry.attributes.position.needsUpdate = true;\n                particles.rotation.x = cube.rotation.x;\n                particles.rotation.y = cube.rotation.y;\n                renderer.render(scene, camera);\n                animationFrameId = requestAnimationFrame(animate);\n            }\n            animate();\n            // Handle resize\n            function handleResize() {\n                if (!containerRef.current) return;\n                const { width } = containerRef.current.getBoundingClientRect();\n                const height = width // Keep it square\n                ;\n                camera.aspect = width / height;\n                camera.updateProjectionMatrix();\n                renderer.setSize(width, height);\n            }\n            window.addEventListener('resize', handleResize);\n            // Cleanup\n            return ({\n                \"CodeCube.useEffect\": ()=>{\n                    window.removeEventListener('resize', handleResize);\n                    cancelAnimationFrame(animationFrameId);\n                    materials.forEach({\n                        \"CodeCube.useEffect\": (material)=>{\n                            var _material_map;\n                            (_material_map = material.map) === null || _material_map === void 0 ? void 0 : _material_map.dispose();\n                            material.dispose();\n                        }\n                    }[\"CodeCube.useEffect\"]);\n                    geometry.dispose();\n                    particleGeometry.dispose();\n                    particleMaterial.dispose();\n                    renderer.dispose();\n                    if (container.contains(renderer.domElement)) {\n                        container.removeChild(renderer.domElement);\n                    }\n                }\n            })[\"CodeCube.useEffect\"];\n        }\n    }[\"CodeCube.useEffect\"], []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: containerRef,\n        className: \"w-full aspect-square bg-white\"\n    }, void 0, false, {\n        fileName: \"/Users/djsydney/Downloads/CEO Website/src/components/code-cube.tsx\",\n        lineNumber: 227,\n        columnNumber: 5\n    }, this);\n}\n_s(CodeCube, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c = CodeCube;\nvar _c;\n$RefreshReg$(_c, \"CodeCube\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/code-cube.tsx\n"));

/***/ })

});